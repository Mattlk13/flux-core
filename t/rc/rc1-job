#!/bin/bash -e

set_fake_hwloc_by_rank() {
    cores=${1}
    ranklist="0-$(($(flux getattr size) - 1))"
    corelist="0-$((${cores} - 1))"
    by_rank="{\"${ranklist}\":{\"Core\":${cores},\"coreids\":\"${corelist}\"}}"
    echo Setting fake by_rank="${by_rank}" >&2
    flux kvs put resource.hwloc.by_rank="${by_rank}"
    flux kvs eventlog append resource.eventlog \
        hwloc-discover-finish "{\"loaded\":true}"
}

RANK=$(flux getattr rank)

# Usage: modload {all|<rank>} modname [args ...]
modload() {
    local where=$1; shift
    if test "$where" = "all" || test $where -eq $RANK; then
        flux module load $*
    fi
}


modload 0 content-sqlite
modload all kvs
modload all kvs-watch

modload 0 job-manager

modload all job-ingest
modload 0 job-info
modload all barrier

if test $RANK -eq 0; then
    # Load a fake resource.hwloc.by_rank key for sched-simple
    set_fake_hwloc_by_rank ${TEST_UNDER_FLUX_CORES_PER_RANK:-2}
fi
modload 0 resource

modload 0 job-exec

modload 0 sched-simple

test $RANK -ne 0 || flux admin cleanup-push <<-EOT
	flux queue stop
	flux job cancelall -f --states RUN
	flux queue idle
EOT
