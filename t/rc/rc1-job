#!/bin/bash -e

idset_from_count() {
    if test $1 -eq 1; then
        echo "0"
    else
        echo "0-$(($1 - 1))"
    fi
}

set_fake_resources() {
    cores=${1}
    ranklist=$(idset_from_count $(flux getattr size))
    corelist=$(idset_from_count ${cores})
    R=$(flux R encode -r${ranklist} -c${corelist})
    echo Setting fake resource.R="$R" >&2
    flux kvs put resource.R="$R"
}

RANK=$(flux getattr rank)

# Usage: modload {all|<rank>} modname [args ...]
modload() {
    local where=$1; shift
    if test "$where" = "all" || test $where -eq $RANK; then
        flux module load $*
    fi
}


modload 0 content-sqlite
modload all kvs
modload all kvs-watch

modload 0 job-manager

modload all job-ingest
modload 0 job-info
modload all barrier

if test $RANK -eq 0; then
    # Set fake resources for testing
    set_fake_resources ${TEST_UNDER_FLUX_CORES_PER_RANK:-2}
fi
modload all resource

modload 0 job-exec

modload 0 sched-simple

test $RANK -ne 0 || flux admin cleanup-push <<-EOT
	flux queue stop
	flux job cancelall -f --states RUN
	flux queue idle
EOT
