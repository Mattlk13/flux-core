#!/bin/bash -e

# Usage: wait_check pid [pid ...]
wait_check() {
    local pid
    for pid in $*; do wait $pid; done
}

# Allow connector-local more time to start listening on socket in rc1 only
export FLUX_LOCAL_CONNECTOR_RETRY_COUNT=10

if ! content_backing=$(flux getattr content.backing-module 2>/dev/null); then
    content_backing=content-sqlite
fi

declare -a pids
flux exec -r all flux module load barrier & pids+=($!)
flux module load ${content_backing} & pids+=($!)
flux exec -r all flux module load aggregator & pids+=($!)
wait_check ${pids[@]}
unset pids

declare -a pids
flux module load kvs
flux exec -r all -x 0 flux module load kvs & pids+=($!)
flux exec -r all flux module load kvs-watch & pids+=($!)
wait_check ${pids[@]}
unset pids

declare -a pids
flux module load resource
flux module load job-info & pids+=($!)
flux module load cron sync=hb & pids+=($!)
flux module load job-manager & pids+=($!)
wait_check ${pids[@]}
unset pids

declare -a pids
flux module load job-ingest
flux exec -r all -x 0 flux module load job-ingest & pids+=($!)
flux module load job-exec &  pids+=($!)
flux module load sched-simple & pids+=($!)
wait_check ${pids[@]}
unset pids

core_dir=$(cd ${0%/*} && pwd -P)
all_dirs=$core_dir${FLUX_RC_EXTRA:+":$FLUX_RC_EXTRA"}
IFS=:
shopt -s nullglob
for rcdir in $all_dirs; do
    for rcfile in $rcdir/rc1.d/*; do
	echo running $rcfile
        $rcfile
    done
done
shopt -u nullglob

flux admin cleanup-push <<-EOT
	flux queue stop --quiet
	flux job cancelall --user=all --quiet -f --states RUN
	flux queue idle --quiet
EOT
